{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\components\\\\info.js\",\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\components\\\\form.js\",\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\components\\\\weather.js\",\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\App.js\",\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\index.js\"],\"names\":[\"Info\",\"react_default\",\"a\",\"createElement\",\"Form\",\"props\",\"onSubmit\",\"weatherMethod\",\"type\",\"name\",\"placeholder\",\"Weather\",\"city\",\"country\",\"temp\",\"time\",\"dmy\",\"error\",\"API_KEY\",\"App\",\"state\",\"undefined\",\"gettingWeather\",\"_callee\",\"e\",\"api_url\",\"data\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"sent\",\"json\",\"location\",\"localtime\",\"toString\",\"slice\",\"_this\",\"setState\",\"current\",\"temp_c\",\"stop\",\"info\",\"components_form\",\"this\",\"weather\",\"React\",\"Component\",\"Boolean\",\"window\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nconst Info = () => (\\r\\n    <div>\\r\\n        <h2>Погодное приложение</h2>\\r\\n        `<h4>Узнайте погоду в вашем гроде</h4>\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default Info;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst Form=props=>(\\r\\n    <form onSubmit={props.weatherMethod}>\\r\\n        <input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"Город\\\"/>\\r\\n        <button>Получить погоду</button>\\r\\n    </form>\\r\\n);\\r\\n\\r\\nexport default Form;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst Weather=(props)=>(\\r\\n    <div>\\r\\n        {props.city &&\\r\\n        <div>\\r\\n            <p>Местоположение : {props.city},{props.country}</p>\\r\\n            <p>Температура : {props.temp}</p>\\r\\n            <p>Время : {props.time}</p>\\r\\n            <p>ГГ-ММ-ДД : {props.dmy}</p>\\r\\n        </div>\\r\\n        }\\r\\n        <p>{props.error}</p>\\r\\n    </div>\\r\\n);\\r\\n\\r\\nexport default Weather;\\r\\n\",\"//Основной компонент,компанирует все элементы\\r\\nimport React from 'react';\\r\\nimport Info from './components/info'\\r\\nimport Form from './components/form'\\r\\nimport Weather from './components/weather'\\r\\n\\r\\nconst API_KEY = \\\"8c96a8adac5447629eb203740191507\\\";\\r\\nclass App extends React.Component {\\r\\n\\r\\n    state = {\\r\\n        temp:undefined,\\r\\n        city:undefined,\\r\\n        country:undefined,\\r\\n        error:undefined,\\r\\n        time:undefined,\\r\\n        dmy:undefined\\r\\n    };\\r\\n\\r\\n    //async,await -асинхронно\\r\\n    //fetch-возможность получать все со страницы\\r\\n    gettingWeather = async (e) => {\\r\\n\\r\\n        e.preventDefault();\\r\\n        const city=e.target.elements.city.value;\\r\\n\\r\\n        if(city){\\r\\n            const api_url = await\\r\\n                fetch(`https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${city}&days=1`);\\r\\n            const data=await api_url.json();\\r\\n            const time= data.location.localtime.toString().slice(11,18);\\r\\n            const dmy=data.location.localtime.toString().slice(0,10);\\r\\n            this.setState({\\r\\n                temp:data.current.temp_c,\\r\\n                city:data.location.name,\\r\\n                country:data.location.country,\\r\\n                time:time,\\r\\n                dmy:dmy,\\r\\n                error:\\\"\\\"\\r\\n            });\\r\\n        }else {\\r\\n            this.setState({\\r\\n                temp:undefined,\\r\\n                city:undefined,\\r\\n                country:undefined,\\r\\n                error:\\\"Введите название города\\\",\\r\\n                time:undefined,\\r\\n                dmy:undefined\\r\\n            })\\r\\n        }\\r\\n    };\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <Info></Info>\\r\\n                <Form weatherMethod={this.gettingWeather} />\\r\\n                <Weather\\r\\n                temp={this.state.temp}\\r\\n                city={this.state.city}\\r\\n                country={this.state.country}\\r\\n                time={this.state.time}\\r\\n                dmy={this.state.dmy}\\r\\n                error={this.state.error}\\r\\n                />\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\n//экспортируем для подключения\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"//один какой то компонент выводит на index.html\\n//если js тип можно не писать расширение\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n    <App />,\\n    document.getElementById('root')\\n);\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},18:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(3),c=n.n(o),i=(n(16),n(1)),l=n.n(i),u=n(4),m=n(5),s=n(6),d=n(8),p=n(7),h=n(9),y=function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"\\u041f\\u043e\\u0433\\u043e\\u0434\\u043d\\u043e\\u0435 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0435\"),\"`\",r.a.createElement(\"h4\",null,\"\\u0423\\u0437\\u043d\\u0430\\u0439\\u0442\\u0435 \\u043f\\u043e\\u0433\\u043e\\u0434\\u0443 \\u0432 \\u0432\\u0430\\u0448\\u0435\\u043c \\u0433\\u0440\\u043e\\u0434\\u0435\"))},v=function(e){return r.a.createElement(\"form\",{onSubmit:e.weatherMethod},r.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"\\u0413\\u043e\\u0440\\u043e\\u0434\"}),r.a.createElement(\"button\",null,\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0438\\u0442\\u044c \\u043f\\u043e\\u0433\\u043e\\u0434\\u0443\"))},f=function(e){return r.a.createElement(\"div\",null,e.city&&r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,\"\\u041c\\u0435\\u0441\\u0442\\u043e\\u043f\\u043e\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u0435 : \",e.city,\",\",e.country),r.a.createElement(\"p\",null,\"\\u0422\\u0435\\u043c\\u043f\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430 : \",e.temp),r.a.createElement(\"p\",null,\"\\u0412\\u0440\\u0435\\u043c\\u044f : \",e.time),r.a.createElement(\"p\",null,\"\\u0413\\u0413-\\u041c\\u041c-\\u0414\\u0414 : \",e.dmy)),r.a.createElement(\"p\",null,e.error))},E=\"8c96a8adac5447629eb203740191507\",w=function(e){function t(){var e,n;Object(m.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(d.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(r)))).state={temp:void 0,city:void 0,country:void 0,error:void 0,time:void 0,dmy:void 0},n.gettingWeather=function(){var e=Object(u.a)(l.a.mark(function e(t){var a,r,o,c,i;return l.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(t.preventDefault(),!(a=t.target.elements.city.value)){e.next=14;break}return e.next=5,fetch(\"https://api.apixu.com/v1/forecast.json?key=\".concat(E,\"&q=\").concat(a,\"&days=1\"));case 5:return r=e.sent,e.next=8,r.json();case 8:o=e.sent,c=o.location.localtime.toString().slice(11,18),i=o.location.localtime.toString().slice(0,10),n.setState({temp:o.current.temp_c,city:o.location.name,country:o.location.country,time:c,dmy:i,error:\"\"}),e.next=15;break;case 14:n.setState({temp:void 0,city:void 0,country:void 0,error:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435 \\u0433\\u043e\\u0440\\u043e\\u0434\\u0430\",time:void 0,dmy:void 0});case 15:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(y,null),r.a.createElement(v,{weatherMethod:this.gettingWeather}),r.a.createElement(f,{temp:this.state.temp,city:this.state.city,country:this.state.country,time:this.state.time,dmy:this.state.dmy,error:this.state.error}))}}]),t}(r.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}