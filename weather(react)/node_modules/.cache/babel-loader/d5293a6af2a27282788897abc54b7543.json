{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\App.js\";\n//Основной компонент,компанирует все элементы\nimport React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      error: undefined,\n      time: undefined,\n      dmy: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.apixu.com/v1/forecast.json?key=\".concat(API_KEY, \"&q=\").concat(city, \"&days=1\"));\n        const data = await api_url.json();\n        const time = data.location.localtime.toString().slice(11, 18);\n        const dmy = data.location.localtime.toString().slice(0, 10);\n        console.log(dmy, time);\n        this.setState({\n          temp: data.current.temp_c,\n          city: data.location.name,\n          country: data.location.country,\n          time: time,\n          dmy: dmy,\n          error: \"\"\n        });\n        console.log(time);\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          error: \"Введите название города\",\n          time: undefined,\n          dmy: undefined\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      localtime: this.state.localtime,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n} //экспортируем для подключения\n\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\itproger_react\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","error","time","dmy","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","location","localtime","toString","slice","console","log","setState","current","temp_c","name","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AACJC,MAAAA,IAAI,EAACC,SADD;AAEJC,MAAAA,IAAI,EAACD,SAFD;AAGJE,MAAAA,OAAO,EAACF,SAHJ;AAIJG,MAAAA,KAAK,EAACH,SAJF;AAKJI,MAAAA,IAAI,EAACJ,SALD;AAMJK,MAAAA,GAAG,EAACL;AANA,KAFsB;;AAAA,SAa9BM,cAb8B,GAab,MAAOC,CAAP,IAAa;AAE1BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAACM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAAlC;;AAEA,UAAGV,IAAH,EAAQ;AACJ,cAAMW,OAAO,GAAG,MACZC,KAAK,sDAA+ClB,OAA/C,gBAA4DM,IAA5D,aADT;AAEA,cAAMa,IAAI,GAAC,MAAMF,OAAO,CAACG,IAAR,EAAjB;AACA,cAAMX,IAAI,GAAEU,IAAI,CAACE,QAAL,CAAcC,SAAd,CAAwBC,QAAxB,GAAmCC,KAAnC,CAAyC,EAAzC,EAA4C,EAA5C,CAAZ;AACA,cAAMd,GAAG,GAACS,IAAI,CAACE,QAAL,CAAcC,SAAd,CAAwBC,QAAxB,GAAmCC,KAAnC,CAAyC,CAAzC,EAA2C,EAA3C,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ,EAAgBD,IAAhB;AACA,aAAKkB,QAAL,CAAc;AACVvB,UAAAA,IAAI,EAACe,IAAI,CAACS,OAAL,CAAaC,MADR;AAEVvB,UAAAA,IAAI,EAACa,IAAI,CAACE,QAAL,CAAcS,IAFT;AAGVvB,UAAAA,OAAO,EAACY,IAAI,CAACE,QAAL,CAAcd,OAHZ;AAIVE,UAAAA,IAAI,EAACA,IAJK;AAKVC,UAAAA,GAAG,EAACA,GALM;AAMVF,UAAAA,KAAK,EAAC;AANI,SAAd;AASAiB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACH,OAjBD,MAiBM;AACF,aAAKkB,QAAL,CAAc;AACVvB,UAAAA,IAAI,EAACC,SADK;AAEVC,UAAAA,IAAI,EAACD,SAFK;AAGVE,UAAAA,OAAO,EAACF,SAHE;AAIVG,UAAAA,KAAK,EAAC,yBAJI;AAKVC,UAAAA,IAAI,EAACJ,SALK;AAMVK,UAAAA,GAAG,EAACL;AANM,SAAd;AAQH;AACJ,KA7C6B;AAAA;;AA+C9B0B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKpB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADjB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFjB;AAGA,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHpB;AAIA,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWmB,SAJtB;AAKA,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWK,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAaH;;AA7D6B,C,CAgElC;;;AACA,eAAeP,GAAf","sourcesContent":["//Основной компонент,компанирует все элементы\r\nimport React from 'react';\r\nimport Info from './components/info'\r\nimport Form from './components/form'\r\nimport Weather from './components/weather'\r\n\r\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        temp:undefined,\r\n        city:undefined,\r\n        country:undefined,\r\n        error:undefined,\r\n        time:undefined,\r\n        dmy:undefined\r\n    };\r\n\r\n    //async,await -асинхронно\r\n    //fetch-возможность получать все со страницы\r\n    gettingWeather = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const city=e.target.elements.city.value;\r\n\r\n        if(city){\r\n            const api_url = await\r\n                fetch(`https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${city}&days=1`);\r\n            const data=await api_url.json();\r\n            const time= data.location.localtime.toString().slice(11,18);\r\n            const dmy=data.location.localtime.toString().slice(0,10);\r\n            console.log(dmy,time);\r\n            this.setState({\r\n                temp:data.current.temp_c,\r\n                city:data.location.name,\r\n                country:data.location.country,\r\n                time:time,\r\n                dmy:dmy,\r\n                error:\"\"\r\n\r\n            });\r\n            console.log(time);\r\n        }else {\r\n            this.setState({\r\n                temp:undefined,\r\n                city:undefined,\r\n                country:undefined,\r\n                error:\"Введите название города\",\r\n                time:undefined,\r\n                dmy:undefined\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Info></Info>\r\n                <Form weatherMethod={this.gettingWeather} />\r\n                <Weather\r\n                temp={this.state.temp}\r\n                city={this.state.city}\r\n                country={this.state.country}\r\n                localtime={this.state.localtime}\r\n                error={this.state.error}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//экспортируем для подключения\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}