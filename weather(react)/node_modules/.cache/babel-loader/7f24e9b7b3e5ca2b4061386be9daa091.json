{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\App.js\";\n//Основной компонент,компанирует все элементы\nimport React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      error: undefined,\n      time: undefined,\n      dmy: undefined,\n      loading: false,\n      imageUrl: 'https://cdn.dribbble.com/users/658839/screenshots/2015006/city-illustration.png'\n    };\n  }\n\n  onCitySubmit(event) {\n    if (event.keyCode == 13) {\n      this.getWeatherForCity(event.target.value);\n    }\n  }\n\n  getWeatherForCity(city) {\n    fetch(\"https://api.apixu.com/v1/forecast.json?key=\".concat(API_KEY, \"&q=\").concat(city, \"&days=1\")).then(response => {\n      if (response.status !== 200) {\n        console.log(\"Error fetching data. Respons:\".concat(response.status));\n        return;\n      }\n\n      response.json().then(data => {\n        const time = data.location.localtime.toString().slice(11, 18);\n        const dmy = data.location.localtime.toString().slice(0, 10);\n        this.setState({\n          temp: data.current.temp_c,\n          city: data.location.name,\n          country: data.location.country,\n          time: time,\n          dmy: dmy,\n          error: \"\"\n        });\n      });\n    }).catch(err => {\n      console.log('Fetch Error :-S', err);\n    });\n  }\n\n  getPhotoContainer() {\n    const preloader = this.state.loading ? React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.ibb.co/meRVm5/sun_1.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))) : null;\n    return React.createElement(\"div\", {\n      className: \"image\",\n      style: {\n        backgroundImage: \"url(\".concat(this.state.imageUrl, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, preloader);\n  }\n\n  getInfoContainer() {\n    const _this$state = this.state,\n          temp = _this$state.temp,\n          region = _this$state.region,\n          time = _this$state.time;\n    let content;\n\n    if (this.state.location.length === 0) {\n      content = null;\n    } else {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, temp, \"\\xB0\")), React.createElement(\"div\", {\n        className: \"hr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, region), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, time)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, content);\n  }\n\n  getLocationInput() {\n    return React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"search\",\n      type: \"search\",\n      placeholder: \"Search location\",\n      onKeyPress: () => this.onCitySubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.getInfoContainer()), this.getLocationInput());\n  }\n\n} //экспортируем для подключения\n\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\itproger_react\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","constructor","state","temp","undefined","city","country","error","time","dmy","loading","imageUrl","onCitySubmit","event","keyCode","getWeatherForCity","target","value","fetch","then","response","status","console","log","json","data","location","localtime","toString","slice","setState","current","temp_c","name","catch","err","getPhotoContainer","preloader","backgroundImage","getInfoContainer","region","content","length","getLocationInput","render"],"mappings":"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","sourcesContent":["//Основной компонент,компанирует все элементы\r\nimport React from 'react';\r\nimport Info from './components/info'\r\nimport Form from './components/form'\r\nimport Weather from './components/weather'\r\n\r\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            temp: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            error: undefined,\r\n            time: undefined,\r\n            dmy: undefined,\r\n            loading:false,\r\n            imageUrl: 'https://cdn.dribbble.com/users/658839/screenshots/2015006/city-illustration.png'\r\n\r\n        }\r\n    }\r\n    onCitySubmit(event) {\r\n        if(event.keyCode == 13) {\r\n            this.getWeatherForCity(event.target.value);\r\n        }\r\n    }\r\n    getWeatherForCity(city) {\r\n        fetch(`https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${city}&days=1`)\r\n            .then((response) => {\r\n                    if (response.status !== 200) {\r\n                        console.log(`Error fetching data. Respons:${response.status}`);\r\n                        return;\r\n                    }\r\n                    response.json().then((data) => {\r\n                        const time= data.location.localtime.toString().slice(11,18);\r\n                        const dmy=data.location.localtime.toString().slice(0,10);\r\n                        this.setState({\r\n                            temp: data.current.temp_c,\r\n                            city: data.location.name,\r\n                            country: data.location.country,\r\n                            time: time,\r\n                            dmy: dmy,\r\n                            error: \"\"\r\n                        });\r\n                    });\r\n                }\r\n            )\r\n            .catch((err) => {\r\n                console.log('Fetch Error :-S', err);\r\n            });\r\n    };\r\n    getPhotoContainer() {\r\n        const preloader = this.state.loading ? (\r\n            <div className=\"overlay\">\r\n                <div className='loader'>\r\n                    <img src='https://image.ibb.co/meRVm5/sun_1.png'/>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n        return (\r\n            <div className=\"image\" style={{ backgroundImage: `url(${this.state.imageUrl})`}}>\r\n                {preloader}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoContainer() {\r\n        const {temp, region,time } = this.state;\r\n        let content;\r\n        if (this.state.location.length === 0) {\r\n            content = null;\r\n        } else {\r\n            content = (\r\n                <div>\r\n                    <div className=\"temp\">\r\n                        <span className=\"value\">{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"hr\"/>\r\n                    <div className=\"location\">\r\n                        <span className=\"city\">{region}</span>\r\n                        <span>{time}</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"info\">\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getLocationInput() {\r\n        return (\r\n            <div className=\"input\">\r\n                <input className=\"search\" type='search' placeholder='Search location' onKeyPress={() => this.onCitySubmit()}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    {this.getInfoContainer()}\r\n                </div>\r\n                {this.getLocationInput()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//экспортируем для подключения\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}