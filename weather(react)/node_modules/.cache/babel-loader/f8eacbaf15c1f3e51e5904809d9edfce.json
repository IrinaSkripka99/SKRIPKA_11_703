{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\itproger_react\\\\src\\\\App.js\";\n//Основной компонент,компанирует все элементы\nimport React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.apixu.com/v1/forecast.json?key=\".concat(API_KEY, \"&q=\").concat(city, \"&days=1\"));\n        const data = await api_url.json();\n        const time = data.location.localtime.toString().slice(11, 18);\n        const dmy = data.location.localtime.toString().slice(0, 10);\n        this.setState({\n          temp: data.current.temp_c,\n          city: data.location.name,\n          country: data.location.country,\n          time: time,\n          dmy: dmy,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          error: \"Введите название города\",\n          time: undefined,\n          dmy: undefined\n        });\n      }\n    };\n\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      error: undefined,\n      time: undefined,\n      dmy: undefined,\n      imageUrl: 'https://cdn.dribbble.com/users/658839/screenshots/2015006/city-illustration.png'\n    };\n  } //async,await -асинхронно\n  //fetch-возможность получать все со страницы\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      time: this.state.time,\n      dmy: this.state.dmy,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n} //экспортируем для подключения\n\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\itproger_react\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","constructor","gettingWeather","e","preventDefault","city","target","elements","value","api_url","fetch","data","json","time","location","localtime","toString","slice","dmy","setState","temp","current","temp_c","name","country","error","undefined","state","imageUrl","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAgBdC,cAhBc,GAgBG,MAAOC,CAAP,IAAa;AAE1BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;;AAEA,UAAIH,IAAJ,EAAU;AACN,cAAMI,OAAO,GAAG,MACZC,KAAK,sDAA+CZ,OAA/C,gBAA4DO,IAA5D,aADT;AAEA,cAAMM,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACA,cAAMC,IAAI,GAAGF,IAAI,CAACG,QAAL,CAAcC,SAAd,CAAwBC,QAAxB,GAAmCC,KAAnC,CAAyC,EAAzC,EAA6C,EAA7C,CAAb;AACA,cAAMC,GAAG,GAAGP,IAAI,CAACG,QAAL,CAAcC,SAAd,CAAwBC,QAAxB,GAAmCC,KAAnC,CAAyC,CAAzC,EAA4C,EAA5C,CAAZ;AACA,aAAKE,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAET,IAAI,CAACU,OAAL,CAAaC,MADT;AAEVjB,UAAAA,IAAI,EAAEM,IAAI,CAACG,QAAL,CAAcS,IAFV;AAGVC,UAAAA,OAAO,EAAEb,IAAI,CAACG,QAAL,CAAcU,OAHb;AAIVX,UAAAA,IAAI,EAAEA,IAJI;AAKVK,UAAAA,GAAG,EAAEA,GALK;AAMVO,UAAAA,KAAK,EAAE;AANG,SAAd;AAQH,OAdD,MAcO;AACH,aAAKN,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAEM,SADI;AAEVrB,UAAAA,IAAI,EAAEqB,SAFI;AAGVF,UAAAA,OAAO,EAAEE,SAHC;AAIVD,UAAAA,KAAK,EAAE,yBAJG;AAKVZ,UAAAA,IAAI,EAAEa,SALI;AAMVR,UAAAA,GAAG,EAAEQ;AANK,SAAd;AAQH;AACJ,KA7Ca;;AAEV,SAAKC,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAEM,SADG;AAETrB,MAAAA,IAAI,EAAEqB,SAFG;AAGTF,MAAAA,OAAO,EAAEE,SAHA;AAITD,MAAAA,KAAK,EAAEC,SAJE;AAKTb,MAAAA,IAAI,EAAEa,SALG;AAMTR,MAAAA,GAAG,EAAEQ,SANI;AAOTE,MAAAA,QAAQ,EAAE;AAPD,KAAb;AAUH,GAb6B,CAe9B;AACA;;;AAgCAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAK3B,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AACI,MAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWP,IADrB;AAEI,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWtB,IAFrB;AAGI,MAAA,OAAO,EAAE,KAAKsB,KAAL,CAAWH,OAHxB;AAII,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWd,IAJrB;AAKI,MAAA,GAAG,EAAE,KAAKc,KAAL,CAAWT,GALpB;AAMI,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWF,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAaH;;AA9D6B,C,CAiElC;;;AACA,eAAe1B,GAAf","sourcesContent":["//Основной компонент,компанирует все элементы\r\nimport React from 'react';\r\nimport Info from './components/info'\r\nimport Form from './components/form'\r\nimport Weather from './components/weather'\r\n\r\nconst API_KEY = \"8c96a8adac5447629eb203740191507\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            temp: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            error: undefined,\r\n            time: undefined,\r\n            dmy: undefined,\r\n            imageUrl: 'https://cdn.dribbble.com/users/658839/screenshots/2015006/city-illustration.png'\r\n\r\n        }\r\n    }\r\n\r\n    //async,await -асинхронно\r\n    //fetch-возможность получать все со страницы\r\n    gettingWeather = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const city = e.target.elements.city.value;\r\n\r\n        if (city) {\r\n            const api_url = await\r\n                fetch(`https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${city}&days=1`);\r\n            const data = await api_url.json();\r\n            const time = data.location.localtime.toString().slice(11, 18);\r\n            const dmy = data.location.localtime.toString().slice(0, 10);\r\n            this.setState({\r\n                temp: data.current.temp_c,\r\n                city: data.location.name,\r\n                country: data.location.country,\r\n                time: time,\r\n                dmy: dmy,\r\n                error: \"\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                temp: undefined,\r\n                city: undefined,\r\n                country: undefined,\r\n                error: \"Введите название города\",\r\n                time: undefined,\r\n                dmy: undefined\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form weatherMethod={this.gettingWeather}/>\r\n                <Weather\r\n                    temp={this.state.temp}\r\n                    city={this.state.city}\r\n                    country={this.state.country}\r\n                    time={this.state.time}\r\n                    dmy={this.state.dmy}\r\n                    error={this.state.error}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//экспортируем для подключения\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}